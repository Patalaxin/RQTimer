name: SSH Action

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PASS: ${{ secrets.SSH_PASS }}
        SECRET_CONSTANT: ${{ secrets.SECRET_CONSTANT }}
        UNIXTIME_KEY: ${{ secrets.UNIXTIME_KEY}}
        OTP_USER: ${{ secrets.OTP_USER }}
        OTP_PASS: ${{ secrets.OTP_PASS}}
        DATABASE_USER: ${{ secrets.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Connect to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          password: ${{ secrets.SSH_PASS }}
          port: 22
          script: |
            set -e  # Остановить выполнение при ошибках
            
            # Mark the repository as safe to avoid dubious ownership error.
            git config --global --add safe.directory /root/TimerRQ
            
            # Обновление и сборка бэкенда
            cd TimerRQ
            git pull
            
            cd backend
            if [ -f .env ]; then rm .env; fi
            echo "SECRET_CONSTANT=${{ secrets.SECRET_CONSTANT }}" >> .env
            echo "UNIXTIME_KEY=${{ secrets.UNIXTIME_KEY }}" >> .env
            echo "OTP_USER=${{ secrets.OTP_USER }}" >> .env
            echo "OTP_PASS=${{ secrets.OTP_PASS }}" >> .env
            echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
            echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
            npm install
            npm run build
            
            # Перезапуск бэкенда
            cd dist
            pm2 restart main
            pm2 save

      - name: Check for frontend changes
        id: frontend_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q '^frontend/'; then
            echo "Frontend changes detected."
            echo "FRONTEND_CHANGED=true" >> $GITHUB_ENV
          else
            echo "No frontend changes."
            echo "FRONTEND_CHANGED=false" >> $GITHUB_ENV
          fi
            
      - name: Update frontend
        if: env.FRONTEND_CHANGED == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          password: ${{ secrets.SSH_PASS }}
          port: 22
          script: |
            #Удаление сборки фронтенда
            sudo rm -rf /var/www/rqtimer/
            
            # Остановка Docker для освобождения памяти
            cd TimerRQ/backend && docker-compose down && cd ..
            
            # Сборка фронтенда
            cd frontend && npm install && npm run build
            
            # Обновление фронтенд конфига для nginx
            sudo mkdir -p /var/www/rqtimer/
            sudo cp -r dist/rq-timer-fe/* /var/www/rqtimer/
            
            # Перезагрузка Nginx
            sudo service nginx reload
            
            # Перезапуск Docker-контейнеров
            cd ../backend && docker-compose up -d