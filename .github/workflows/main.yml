name: SSH Action

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
        SSH_HOST: ${{ secrets.SSH_HOST }}
        SSH_PASS: ${{ secrets.SSH_PASS }}
        DATABASE_USER_TEST: ${{ secrets.DATABASE_USER_TEST }}
        DATABASE_PASSWORD_TEST: ${{ secrets.DATABASE_PASSWORD_TEST }}
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        GRANAS_TOKEN: ${{ secrets.GRANAS_TOKEN }}
        ENIGMA_TOKEN: ${{ secrets.ENIGMA_TOKEN }}
        LOGRUS_TOKEN: ${{ secrets.LOGRUS_TOKEN }}
        SECRET_CONSTANT: ${{ secrets.SECRET_CONSTANT }}
        UNIXTIME_KEY: ${{ secrets.UNIXTIME_KEY}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Connect to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          password: ${{ secrets.SSH_PASS }}
          port: 22
          script: |
            set -e  # Остановить выполнение при ошибках
            
            # Обновление и сборка бэкенда
            cd TimerRQ
            git pull
            
            cd backend
            if [ -f .env ]; then rm .env; fi
            echo "DATABASE_USER_TEST=${{ secrets.DATABASE_USER_TEST }}" >> .env
            echo "DATABASE_PASSWORD_TEST=${{ secrets.DATABASE_PASSWORD_TEST }}" >> .env
            echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env
            echo "GRANAS_TOKEN=${{ secrets.GRANAS_TOKEN }}" >> .env
            echo "ENIGMA_TOKEN=${{ secrets.ENIGMA_TOKEN }}" >> .env
            echo "LOGRUS_TOKEN=${{ secrets.LOGRUS_TOKEN }}" >> .env
            echo "SECRET_CONSTANT=${{ secrets.SECRET_CONSTANT }}" >> .env
            echo "UNIXTIME_KEY=${{ secrets.UNIXTIME_KEY }}" >> .env
            npm install
            npm run build
            
            # Перезапуск бэкенда
            cd dist
            pm2 restart main
            pm2 save

      - name: Check for frontend changes
        id: frontend_changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q '^frontend/'; then
            echo "Frontend changes detected."
            echo "FRONTEND_CHANGED=true" >> $GITHUB_ENV
          else
            echo "No frontend changes."
            echo "FRONTEND_CHANGED=false" >> $GITHUB_ENV
          fi
            
      - name: Update frontend
        if: env.FRONTEND_CHANGED == 'true'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          password: ${{ secrets.SSH_PASS }}
          port: 22
          script: |
            cd TimerRQ/frontend
            npm install
            npm run build
            
            # Обновление фронтенд конфига для nginx
            sudo rm -rf /var/www/rqtimer/
            sudo mkdir -p /var/www/rqtimer/
            sudo cp -r dist/rq-timer-fe/* /var/www/rqtimer/
            
            # Перезагрузка Nginx
            sudo service nginx reload